<!-- Versao com camera apontada no quadro e cubo qr-code  05.04.2025-->


<?xml version="1.0" ?>
<sdf version="1.6">
  <world name="arena_FRL">
    
    <gui>
      <camera name="user_camera">
        <pose>-5.52 -8.41 4.45 0 0.29 1.44</pose>
      </camera>
    </gui>    

    <physics type="ode">
      <ode>
        <solver>
          <type>quick</type>
          <iters>100</iters>
          <sor>1.0</sor>
        </solver>
        <constraints>
          <cfm>0.0</cfm>
          <erp>0.2</erp>
          <contact_max_correcting_vel>0.1</contact_max_correcting_vel>
          <contact_surface_layer>0.0</contact_surface_layer>
        </constraints>
      </ode>
      <real_time_update_rate>100</real_time_update_rate>
      <max_step_size>0.0025</max_step_size>
    </physics>
    
    <!-- Wall 1 -->
    <model name="wall_1">
      <include>
	<uri>model://parede_translucida</uri>
        <pose>-4 -0.05 1.5 0 0 0</pose>
      </include>
    </model>
    
    <!-- Wall 2 -->
    <model name="wall_2">
      <include>
	<uri>model://parede_translucida</uri>
        <pose>-8.05 4 1.5 0 0 1.5708</pose>
      </include>
    </model>
    
    <!-- Wall 3 -->
    <model name="wall_3">
      <include>
	<uri>model://parede_ifsc</uri>
        <pose>-4 8.05 1.5 0 0 0</pose>
      </include>
    </model>
    
    <!-- Wall 4 -->
    <model name="wall_4">
      <include>
	<uri>model://parede_ifsc</uri>
        <pose>0.05 4 1.5 0 0 1.5708</pose>
      </include>
    </model>
    
    <!-- Adiciona o chÃ£o -->
    <include>
      <uri>model://ground_plane</uri>
    </include>

    <!-- Luz ambiente -->
    <include>
      <uri>model://sun</uri>
    </include>

    <!-- Base de Takeoff -->
    <include>
      <uri>model://base_takeoff</uri>
      <pose>-0.75 1 0 0 0 1.57</pose>
    </include>


    <!-- Base de Pouso Altura 1m -->
    <include>
      <uri>model://base_pouso_alt1</uri>
      <pose>-3.5 1 0 0 0 0</pose>
    </include>

    <!-- Base de Pouso Altura 1.5m -->
    <include>
      <uri>model://base_pouso_alt15</uri>
      <pose>-1 7 0 0 0 0</pose>
    </include>

    <!-- Prateleira -->
    <include>
      <uri>model://prateleira</uri>
      <pose>-4 7.5 0 0 0 0</pose>
    </include>

    <!-- QRCode Box -->
    <include>
      <uri>model://qr_cube</uri>
      <pose>-4 7.5 1.52 0 0 -1.5708</pose>
    </include>


    <!-- Base de Pouso -->
    <model name="base1">
      <include> 
        <uri>model://base_pouso</uri>
        <pose>-4 4 0 0 0 0</pose>
      </include> 
    </model>

    <!-- Base de Pouso -->
    <model name="base2">
      <include> 
        <uri>model://base_pouso</uri>
        <pose>-6 2 0 0 0 0</pose>
      </include> 
    </model>

    <!-- Base de Pouso -->
    <model name="base3">
      <include>
        <uri>model://base_pouso</uri>
        <pose>-6 6 0 0 0 0</pose>
      </include>
    </model>

    
    <model name="iris">
      <include>
        <uri>model://iris_with_standoffs_demo</uri>
      </include>
      <pose>-0.75 1 0.5 0 0 1.57</pose>


      <!-- add new camera -->
      <link name='camera'>
        <pose>0 -0.01 0.070 1.57 0 1.57</pose>
        <inertial>
          <pose>0 0 0 0 0 0</pose>
          <mass>0.1</mass>
          <inertia>
            <ixx>0.001</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.001</iyy>
            <iyz>0</iyz>
            <izz>0.001</izz>
          </inertia>
        </inertial>
        <visual name='visual'>
          <pose>0 0 0 0 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.025</radius>
              <length>0.025</length>
            </cylinder>
          </geometry>
           <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Grey</name>
            </script>
          </material>
        </visual>

        <sensor name="camera" type="camera">
          <pose>0 0 0 -1.57 -1.57 0</pose>
          <camera>
            <horizontal_fov>1.0472</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.05</near>
              <far>1000</far>
            </clip>
          </camera>
          <always_on>1</always_on>
          <update_rate>10</update_rate>
          <visualize>true</visualize>

         <!--  <plugin name="irlock" filename="libArduCopterIRLockPlugin.so">
              <fiducial>irlock_beacon_01</fiducial>
          </plugin> -->
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>webcam</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
      </plugin>

        </sensor>

      </link>

      <!-- attach camera -->
      <joint type="revolute" name="base_camera_joint">
        <pose>0 0 0.0 0 0 0</pose>
        <parent>iris::iris_demo::gimbal_small_2d::tilt_link</parent>
        <child>camera</child>
        <axis>
          <limit>
            <lower>0</lower>
            <upper>0</upper>
          </limit>
          <xyz>0 0 1</xyz>
          <use_parent_model_frame>true</use_parent_model_frame>
        </axis>
      </joint>

         <!--add lidar-->
        <link name="hokuyo_link">
          <pose>0 0 0 0 0 0</pose>
          <collision name="collision">
            <pose>0 0 0.3 0 0 0</pose>
            <geometry>
              <box>
                <size>0.1 0.1 0.1</size>
              </box>
            </geometry>
          </collision>
          <visual name="visual">
            <pose>0 0 0.27 0 0 0</pose>
            <geometry>
              <mesh>
                <uri>model://hokuyo/meshes/hokuyo.dae</uri>
              </mesh>
            </geometry>
          </visual>
          <inertial>
            <mass>0.016</mass>
            <inertia>
               <ixx>0.000</ixx>
               <ixy>0</ixy>
               <ixz>0</ixz>
               <iyy>0.0001</iyy>
               <iyz>0</iyz>
               <izz>0.000</izz>
               <!-- low intertia necessary to avoid not disturb the drone -->
            </inertia>
          </inertial>

          <sensor type="ray" name="laser">
            <pose>0 0 0.3 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
              <scan>
                <horizontal>
                  <samples>1024</samples>
                  <resolution>1</resolution>
                  <min_angle>-3.141593</min_angle>
                  <max_angle>3.141593</max_angle>
                </horizontal>
              </scan>
              <range>
                <min>0.1</min>
                <max>30</max>
                <resolution>0.1</resolution>
              </range>
              <!-- <noise>
                <type>Gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
              </noise> -->
            </ray>
            <plugin name="hokuyo_node" filename="libgazebo_ros_laser.so">
              <robotNamespace></robotNamespace>
              <topicName>/scan</topicName>
              <frameName>/hokuyo_sensor_link</frameName>
            </plugin>
          </sensor>
        </link>

        <joint name="hokuyo_joint" type="fixed">
          <pose>0 0 0 0 0 0</pose>
          <parent>iris::iris_demo::iris::base_link</parent>
          <child>hokuyo_link</child>
        </joint>

    </model>

  </world>
</sdf>
